version: "3.8"

services:
  mongo_blackjack:
    image: mongo:6
    container_name: mongo_blackjack
    ports:
      - "27017:27017"
    networks:
      - blackjack-net
    volumes:
      - mongo_data:/data/db

  postgres_blackjack:
    image: postgres:16
    container_name: postgres_blackjack
    environment:
      POSTGRES_DB: blackjack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      blackjack-net:
        #ipv4_address: 172.18.0.10
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d blackjack"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 45s
    restart: always
    command: ["postgres", "-c", "listen_addresses=*"]


  blackjack-api:
    image: blackjack-api:latest
    container_name: blackjack-api
    build:
      context: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_R2DBC_URL=r2dbc:postgresql://172.18.0.10:5432/blackjack
      - SPRING_R2DBC_USERNAME=postgres
      - SPRING_R2DBC_PASSWORD=postgres
      - SPRING_DATA_MONGODB_URI=mongodb://mongo_blackjack:27017/blackjack
    depends_on:
      postgres_blackjack:
        condition: service_healthy
      mongo_blackjack:
        condition: service_started
    networks:
      - blackjack-net
    hostname: blackjack-api-host
    command: ["sh", "-c", "sleep 10 && java -jar blackjack-api-0.0.1-SNAPSHOT.jar"]

networks:
  blackjack-net:
    driver: bridge
    name: blackjack-net
    ipam:
      config:
        - subnet: 172.18.0.0/24

volumes:
  pg_data:
  mongo_data: